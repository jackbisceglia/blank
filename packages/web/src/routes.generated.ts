/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as StaticLayoutImport } from './pages/_static/layout'
import { Route as ProtectedLayoutImport } from './pages/_protected/layout'
import { Route as ProtectedPageImport } from './pages/_protected/page'
import { Route as ProtectedGroupsLayoutImport } from './pages/_protected/groups/layout'
import { Route as StaticLandingPageImport } from './pages/_static/landing.page'
import { Route as StaticAboutPageImport } from './pages/_static/about.page'
import { Route as ProtectedGroupsPageImport } from './pages/_protected/groups/page'
import { Route as ProtectedAccountPageImport } from './pages/_protected/account.page'
import { Route as ProtectedGroupsSlugLayoutImport } from './pages/_protected/groups/$slug/layout'
import { Route as ProtectedGroupsSlugPageImport } from './pages/_protected/groups/$slug/page'
import { Route as ProtectedGroupsSlugSettingsPageImport } from './pages/_protected/groups/$slug/settings.page'
import { Route as ProtectedGroupsSlugMembersPageImport } from './pages/_protected/groups/$slug/members.page'

// Create/Update Routes

const StaticLayoutRoute = StaticLayoutImport.update({
  id: '/_static',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedLayoutRoute = ProtectedLayoutImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedPageRoute = ProtectedPageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedGroupsLayoutRoute = ProtectedGroupsLayoutImport.update({
  id: '/groups',
  path: '/groups',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const StaticLandingPageRoute = StaticLandingPageImport.update({
  id: '/landing/',
  path: '/landing/',
  getParentRoute: () => StaticLayoutRoute,
} as any)

const StaticAboutPageRoute = StaticAboutPageImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => StaticLayoutRoute,
} as any)

const ProtectedGroupsPageRoute = ProtectedGroupsPageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedGroupsLayoutRoute,
} as any)

const ProtectedAccountPageRoute = ProtectedAccountPageImport.update({
  id: '/account/',
  path: '/account/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedGroupsSlugLayoutRoute = ProtectedGroupsSlugLayoutImport.update({
  id: '/$slug',
  path: '/$slug',
  getParentRoute: () => ProtectedGroupsLayoutRoute,
} as any)

const ProtectedGroupsSlugPageRoute = ProtectedGroupsSlugPageImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedGroupsSlugLayoutRoute,
} as any)

const ProtectedGroupsSlugSettingsPageRoute =
  ProtectedGroupsSlugSettingsPageImport.update({
    id: '/settings/',
    path: '/settings/',
    getParentRoute: () => ProtectedGroupsSlugLayoutRoute,
  } as any)

const ProtectedGroupsSlugMembersPageRoute =
  ProtectedGroupsSlugMembersPageImport.update({
    id: '/members/',
    path: '/members/',
    getParentRoute: () => ProtectedGroupsSlugLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_static': {
      id: '/_static'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StaticLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_protected/groups': {
      id: '/_protected/groups'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof ProtectedGroupsLayoutImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedPageImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/groups/$slug': {
      id: '/_protected/groups/$slug'
      path: '/$slug'
      fullPath: '/groups/$slug'
      preLoaderRoute: typeof ProtectedGroupsSlugLayoutImport
      parentRoute: typeof ProtectedGroupsLayoutImport
    }
    '/_protected/account/': {
      id: '/_protected/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof ProtectedAccountPageImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/groups/': {
      id: '/_protected/groups/'
      path: '/'
      fullPath: '/groups/'
      preLoaderRoute: typeof ProtectedGroupsPageImport
      parentRoute: typeof ProtectedGroupsLayoutImport
    }
    '/_static/about/': {
      id: '/_static/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof StaticAboutPageImport
      parentRoute: typeof StaticLayoutImport
    }
    '/_static/landing/': {
      id: '/_static/landing/'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof StaticLandingPageImport
      parentRoute: typeof StaticLayoutImport
    }
    '/_protected/groups/$slug/': {
      id: '/_protected/groups/$slug/'
      path: '/'
      fullPath: '/groups/$slug/'
      preLoaderRoute: typeof ProtectedGroupsSlugPageImport
      parentRoute: typeof ProtectedGroupsSlugLayoutImport
    }
    '/_protected/groups/$slug/members/': {
      id: '/_protected/groups/$slug/members/'
      path: '/members'
      fullPath: '/groups/$slug/members'
      preLoaderRoute: typeof ProtectedGroupsSlugMembersPageImport
      parentRoute: typeof ProtectedGroupsSlugLayoutImport
    }
    '/_protected/groups/$slug/settings/': {
      id: '/_protected/groups/$slug/settings/'
      path: '/settings'
      fullPath: '/groups/$slug/settings'
      preLoaderRoute: typeof ProtectedGroupsSlugSettingsPageImport
      parentRoute: typeof ProtectedGroupsSlugLayoutImport
    }
  }
}

// Create and export the route tree

interface ProtectedGroupsSlugLayoutRouteChildren {
  ProtectedGroupsSlugPageRoute: typeof ProtectedGroupsSlugPageRoute
  ProtectedGroupsSlugMembersPageRoute: typeof ProtectedGroupsSlugMembersPageRoute
  ProtectedGroupsSlugSettingsPageRoute: typeof ProtectedGroupsSlugSettingsPageRoute
}

const ProtectedGroupsSlugLayoutRouteChildren: ProtectedGroupsSlugLayoutRouteChildren =
  {
    ProtectedGroupsSlugPageRoute: ProtectedGroupsSlugPageRoute,
    ProtectedGroupsSlugMembersPageRoute: ProtectedGroupsSlugMembersPageRoute,
    ProtectedGroupsSlugSettingsPageRoute: ProtectedGroupsSlugSettingsPageRoute,
  }

const ProtectedGroupsSlugLayoutRouteWithChildren =
  ProtectedGroupsSlugLayoutRoute._addFileChildren(
    ProtectedGroupsSlugLayoutRouteChildren,
  )

interface ProtectedGroupsLayoutRouteChildren {
  ProtectedGroupsSlugLayoutRoute: typeof ProtectedGroupsSlugLayoutRouteWithChildren
  ProtectedGroupsPageRoute: typeof ProtectedGroupsPageRoute
}

const ProtectedGroupsLayoutRouteChildren: ProtectedGroupsLayoutRouteChildren = {
  ProtectedGroupsSlugLayoutRoute: ProtectedGroupsSlugLayoutRouteWithChildren,
  ProtectedGroupsPageRoute: ProtectedGroupsPageRoute,
}

const ProtectedGroupsLayoutRouteWithChildren =
  ProtectedGroupsLayoutRoute._addFileChildren(
    ProtectedGroupsLayoutRouteChildren,
  )

interface ProtectedLayoutRouteChildren {
  ProtectedGroupsLayoutRoute: typeof ProtectedGroupsLayoutRouteWithChildren
  ProtectedPageRoute: typeof ProtectedPageRoute
  ProtectedAccountPageRoute: typeof ProtectedAccountPageRoute
}

const ProtectedLayoutRouteChildren: ProtectedLayoutRouteChildren = {
  ProtectedGroupsLayoutRoute: ProtectedGroupsLayoutRouteWithChildren,
  ProtectedPageRoute: ProtectedPageRoute,
  ProtectedAccountPageRoute: ProtectedAccountPageRoute,
}

const ProtectedLayoutRouteWithChildren = ProtectedLayoutRoute._addFileChildren(
  ProtectedLayoutRouteChildren,
)

interface StaticLayoutRouteChildren {
  StaticAboutPageRoute: typeof StaticAboutPageRoute
  StaticLandingPageRoute: typeof StaticLandingPageRoute
}

const StaticLayoutRouteChildren: StaticLayoutRouteChildren = {
  StaticAboutPageRoute: StaticAboutPageRoute,
  StaticLandingPageRoute: StaticLandingPageRoute,
}

const StaticLayoutRouteWithChildren = StaticLayoutRoute._addFileChildren(
  StaticLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof StaticLayoutRouteWithChildren
  '/groups': typeof ProtectedGroupsLayoutRouteWithChildren
  '/': typeof ProtectedPageRoute
  '/groups/$slug': typeof ProtectedGroupsSlugLayoutRouteWithChildren
  '/account': typeof ProtectedAccountPageRoute
  '/groups/': typeof ProtectedGroupsPageRoute
  '/about': typeof StaticAboutPageRoute
  '/landing': typeof StaticLandingPageRoute
  '/groups/$slug/': typeof ProtectedGroupsSlugPageRoute
  '/groups/$slug/members': typeof ProtectedGroupsSlugMembersPageRoute
  '/groups/$slug/settings': typeof ProtectedGroupsSlugSettingsPageRoute
}

export interface FileRoutesByTo {
  '': typeof StaticLayoutRouteWithChildren
  '/': typeof ProtectedPageRoute
  '/account': typeof ProtectedAccountPageRoute
  '/groups': typeof ProtectedGroupsPageRoute
  '/about': typeof StaticAboutPageRoute
  '/landing': typeof StaticLandingPageRoute
  '/groups/$slug': typeof ProtectedGroupsSlugPageRoute
  '/groups/$slug/members': typeof ProtectedGroupsSlugMembersPageRoute
  '/groups/$slug/settings': typeof ProtectedGroupsSlugSettingsPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedLayoutRouteWithChildren
  '/_static': typeof StaticLayoutRouteWithChildren
  '/_protected/groups': typeof ProtectedGroupsLayoutRouteWithChildren
  '/_protected/': typeof ProtectedPageRoute
  '/_protected/groups/$slug': typeof ProtectedGroupsSlugLayoutRouteWithChildren
  '/_protected/account/': typeof ProtectedAccountPageRoute
  '/_protected/groups/': typeof ProtectedGroupsPageRoute
  '/_static/about/': typeof StaticAboutPageRoute
  '/_static/landing/': typeof StaticLandingPageRoute
  '/_protected/groups/$slug/': typeof ProtectedGroupsSlugPageRoute
  '/_protected/groups/$slug/members/': typeof ProtectedGroupsSlugMembersPageRoute
  '/_protected/groups/$slug/settings/': typeof ProtectedGroupsSlugSettingsPageRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/groups'
    | '/'
    | '/groups/$slug'
    | '/account'
    | '/groups/'
    | '/about'
    | '/landing'
    | '/groups/$slug/'
    | '/groups/$slug/members'
    | '/groups/$slug/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/'
    | '/account'
    | '/groups'
    | '/about'
    | '/landing'
    | '/groups/$slug'
    | '/groups/$slug/members'
    | '/groups/$slug/settings'
  id:
    | '__root__'
    | '/_protected'
    | '/_static'
    | '/_protected/groups'
    | '/_protected/'
    | '/_protected/groups/$slug'
    | '/_protected/account/'
    | '/_protected/groups/'
    | '/_static/about/'
    | '/_static/landing/'
    | '/_protected/groups/$slug/'
    | '/_protected/groups/$slug/members/'
    | '/_protected/groups/$slug/settings/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedLayoutRoute: typeof ProtectedLayoutRouteWithChildren
  StaticLayoutRoute: typeof StaticLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedLayoutRoute: ProtectedLayoutRouteWithChildren,
  StaticLayoutRoute: StaticLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/_static"
      ]
    },
    "/_protected": {
      "filePath": "_protected/layout.tsx",
      "children": [
        "/_protected/groups",
        "/_protected/",
        "/_protected/account/"
      ]
    },
    "/_static": {
      "filePath": "_static/layout.tsx",
      "children": [
        "/_static/about/",
        "/_static/landing/"
      ]
    },
    "/_protected/groups": {
      "filePath": "_protected/groups/layout.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/groups/$slug",
        "/_protected/groups/"
      ]
    },
    "/_protected/": {
      "filePath": "_protected/page.tsx",
      "parent": "/_protected"
    },
    "/_protected/groups/$slug": {
      "filePath": "_protected/groups/$slug/layout.tsx",
      "parent": "/_protected/groups",
      "children": [
        "/_protected/groups/$slug/",
        "/_protected/groups/$slug/members/",
        "/_protected/groups/$slug/settings/"
      ]
    },
    "/_protected/account/": {
      "filePath": "_protected/account.page.tsx",
      "parent": "/_protected"
    },
    "/_protected/groups/": {
      "filePath": "_protected/groups/page.tsx",
      "parent": "/_protected/groups"
    },
    "/_static/about/": {
      "filePath": "_static/about.page.tsx",
      "parent": "/_static"
    },
    "/_static/landing/": {
      "filePath": "_static/landing.page.tsx",
      "parent": "/_static"
    },
    "/_protected/groups/$slug/": {
      "filePath": "_protected/groups/$slug/page.tsx",
      "parent": "/_protected/groups/$slug"
    },
    "/_protected/groups/$slug/members/": {
      "filePath": "_protected/groups/$slug/members.page.tsx",
      "parent": "/_protected/groups/$slug"
    },
    "/_protected/groups/$slug/settings/": {
      "filePath": "_protected/groups/$slug/settings.page.tsx",
      "parent": "/_protected/groups/$slug"
    }
  }
}
ROUTE_MANIFEST_END */
