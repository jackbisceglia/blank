/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as StaticLayoutImport } from './pages/_static/layout'
import { Route as ProtectedLayoutImport } from './pages/_protected/layout'
import { Route as ProtectedIndexImport } from './pages/_protected/index'
import { Route as StaticLandingImport } from './pages/_static/landing'
import { Route as StaticAboutImport } from './pages/_static/about'
import { Route as ProtectedAccountImport } from './pages/_protected/account'
import { Route as ProtectedGroupsLayoutImport } from './pages/_protected/groups/layout'
import { Route as ProtectedGroupsIndexImport } from './pages/_protected/groups/index'
import { Route as ProtectedGroupsIdImport } from './pages/_protected/groups/$id'

// Create/Update Routes

const StaticLayoutRoute = StaticLayoutImport.update({
  id: '/_static',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedLayoutRoute = ProtectedLayoutImport.update({
  id: '/_protected',
  getParentRoute: () => rootRoute,
} as any)

const ProtectedIndexRoute = ProtectedIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const StaticLandingRoute = StaticLandingImport.update({
  id: '/landing',
  path: '/landing',
  getParentRoute: () => StaticLayoutRoute,
} as any)

const StaticAboutRoute = StaticAboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => StaticLayoutRoute,
} as any)

const ProtectedAccountRoute = ProtectedAccountImport.update({
  id: '/account',
  path: '/account',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedGroupsLayoutRoute = ProtectedGroupsLayoutImport.update({
  id: '/groups',
  path: '/groups',
  getParentRoute: () => ProtectedLayoutRoute,
} as any)

const ProtectedGroupsIndexRoute = ProtectedGroupsIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ProtectedGroupsLayoutRoute,
} as any)

const ProtectedGroupsIdRoute = ProtectedGroupsIdImport.update({
  id: '/$id',
  path: '/$id',
  getParentRoute: () => ProtectedGroupsLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_static': {
      id: '/_static'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof StaticLayoutImport
      parentRoute: typeof rootRoute
    }
    '/_protected/groups': {
      id: '/_protected/groups'
      path: '/groups'
      fullPath: '/groups'
      preLoaderRoute: typeof ProtectedGroupsLayoutImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/account': {
      id: '/_protected/account'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof ProtectedAccountImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_static/about': {
      id: '/_static/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof StaticAboutImport
      parentRoute: typeof StaticLayoutImport
    }
    '/_static/landing': {
      id: '/_static/landing'
      path: '/landing'
      fullPath: '/landing'
      preLoaderRoute: typeof StaticLandingImport
      parentRoute: typeof StaticLayoutImport
    }
    '/_protected/': {
      id: '/_protected/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof ProtectedIndexImport
      parentRoute: typeof ProtectedLayoutImport
    }
    '/_protected/groups/$id': {
      id: '/_protected/groups/$id'
      path: '/$id'
      fullPath: '/groups/$id'
      preLoaderRoute: typeof ProtectedGroupsIdImport
      parentRoute: typeof ProtectedGroupsLayoutImport
    }
    '/_protected/groups/': {
      id: '/_protected/groups/'
      path: '/'
      fullPath: '/groups/'
      preLoaderRoute: typeof ProtectedGroupsIndexImport
      parentRoute: typeof ProtectedGroupsLayoutImport
    }
  }
}

// Create and export the route tree

interface ProtectedGroupsLayoutRouteChildren {
  ProtectedGroupsIdRoute: typeof ProtectedGroupsIdRoute
  ProtectedGroupsIndexRoute: typeof ProtectedGroupsIndexRoute
}

const ProtectedGroupsLayoutRouteChildren: ProtectedGroupsLayoutRouteChildren = {
  ProtectedGroupsIdRoute: ProtectedGroupsIdRoute,
  ProtectedGroupsIndexRoute: ProtectedGroupsIndexRoute,
}

const ProtectedGroupsLayoutRouteWithChildren =
  ProtectedGroupsLayoutRoute._addFileChildren(
    ProtectedGroupsLayoutRouteChildren,
  )

interface ProtectedLayoutRouteChildren {
  ProtectedGroupsLayoutRoute: typeof ProtectedGroupsLayoutRouteWithChildren
  ProtectedAccountRoute: typeof ProtectedAccountRoute
  ProtectedIndexRoute: typeof ProtectedIndexRoute
}

const ProtectedLayoutRouteChildren: ProtectedLayoutRouteChildren = {
  ProtectedGroupsLayoutRoute: ProtectedGroupsLayoutRouteWithChildren,
  ProtectedAccountRoute: ProtectedAccountRoute,
  ProtectedIndexRoute: ProtectedIndexRoute,
}

const ProtectedLayoutRouteWithChildren = ProtectedLayoutRoute._addFileChildren(
  ProtectedLayoutRouteChildren,
)

interface StaticLayoutRouteChildren {
  StaticAboutRoute: typeof StaticAboutRoute
  StaticLandingRoute: typeof StaticLandingRoute
}

const StaticLayoutRouteChildren: StaticLayoutRouteChildren = {
  StaticAboutRoute: StaticAboutRoute,
  StaticLandingRoute: StaticLandingRoute,
}

const StaticLayoutRouteWithChildren = StaticLayoutRoute._addFileChildren(
  StaticLayoutRouteChildren,
)

export interface FileRoutesByFullPath {
  '': typeof StaticLayoutRouteWithChildren
  '/groups': typeof ProtectedGroupsLayoutRouteWithChildren
  '/account': typeof ProtectedAccountRoute
  '/about': typeof StaticAboutRoute
  '/landing': typeof StaticLandingRoute
  '/': typeof ProtectedIndexRoute
  '/groups/$id': typeof ProtectedGroupsIdRoute
  '/groups/': typeof ProtectedGroupsIndexRoute
}

export interface FileRoutesByTo {
  '': typeof StaticLayoutRouteWithChildren
  '/account': typeof ProtectedAccountRoute
  '/about': typeof StaticAboutRoute
  '/landing': typeof StaticLandingRoute
  '/': typeof ProtectedIndexRoute
  '/groups/$id': typeof ProtectedGroupsIdRoute
  '/groups': typeof ProtectedGroupsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_protected': typeof ProtectedLayoutRouteWithChildren
  '/_static': typeof StaticLayoutRouteWithChildren
  '/_protected/groups': typeof ProtectedGroupsLayoutRouteWithChildren
  '/_protected/account': typeof ProtectedAccountRoute
  '/_static/about': typeof StaticAboutRoute
  '/_static/landing': typeof StaticLandingRoute
  '/_protected/': typeof ProtectedIndexRoute
  '/_protected/groups/$id': typeof ProtectedGroupsIdRoute
  '/_protected/groups/': typeof ProtectedGroupsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/groups'
    | '/account'
    | '/about'
    | '/landing'
    | '/'
    | '/groups/$id'
    | '/groups/'
  fileRoutesByTo: FileRoutesByTo
  to: '' | '/account' | '/about' | '/landing' | '/' | '/groups/$id' | '/groups'
  id:
    | '__root__'
    | '/_protected'
    | '/_static'
    | '/_protected/groups'
    | '/_protected/account'
    | '/_static/about'
    | '/_static/landing'
    | '/_protected/'
    | '/_protected/groups/$id'
    | '/_protected/groups/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  ProtectedLayoutRoute: typeof ProtectedLayoutRouteWithChildren
  StaticLayoutRoute: typeof StaticLayoutRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  ProtectedLayoutRoute: ProtectedLayoutRouteWithChildren,
  StaticLayoutRoute: StaticLayoutRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_protected",
        "/_static"
      ]
    },
    "/_protected": {
      "filePath": "_protected/layout.tsx",
      "children": [
        "/_protected/groups",
        "/_protected/account",
        "/_protected/"
      ]
    },
    "/_static": {
      "filePath": "_static/layout.tsx",
      "children": [
        "/_static/about",
        "/_static/landing"
      ]
    },
    "/_protected/groups": {
      "filePath": "_protected/groups/layout.tsx",
      "parent": "/_protected",
      "children": [
        "/_protected/groups/$id",
        "/_protected/groups/"
      ]
    },
    "/_protected/account": {
      "filePath": "_protected/account.tsx",
      "parent": "/_protected"
    },
    "/_static/about": {
      "filePath": "_static/about.tsx",
      "parent": "/_static"
    },
    "/_static/landing": {
      "filePath": "_static/landing.tsx",
      "parent": "/_static"
    },
    "/_protected/": {
      "filePath": "_protected/index.tsx",
      "parent": "/_protected"
    },
    "/_protected/groups/$id": {
      "filePath": "_protected/groups/$id.tsx",
      "parent": "/_protected/groups"
    },
    "/_protected/groups/": {
      "filePath": "_protected/groups/index.tsx",
      "parent": "/_protected/groups"
    }
  }
}
ROUTE_MANIFEST_END */
