/* 
    NOTE: this is a good idea generated by ai

    lastUsedGroupId: uuidv7('last_used_group_id'),

    not going to implement now, but for the future we can use this, 
    probably w/ redis or something, to store the last used group id 
    for when a user is submitting often. this can time out and fall
    back to the default group id
*/

import { pgTable, primaryKey, uuid } from "drizzle-orm/pg-core";
import { DrizzleModelTypes } from "../../lib/drizzle/utils";
import { createInsertSchema, createSelectSchema } from "drizzle-valibot";

export const preferenceTable = pgTable(
  "preference",
  {
    userId: uuid().notNull().unique(), // update to make into ulid
    defaultGroupId: uuid(), // update to make into ulid
  },
  (table) => [primaryKey({ columns: [table.userId, table.defaultGroupId] })],
);

type PreferenceTypes = DrizzleModelTypes<typeof preferenceTable>;

export type Preference = PreferenceTypes["Select"];
export const Preference = createSelectSchema(preferenceTable);

export type PreferenceInsert = PreferenceTypes["Insert"];
export const PreferenceInsert = createInsertSchema(preferenceTable);
